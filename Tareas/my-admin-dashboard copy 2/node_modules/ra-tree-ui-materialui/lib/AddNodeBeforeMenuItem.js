"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var ra_core_1 = require("ra-core");
var MenuItem_1 = __importDefault(require("@material-ui/core/MenuItem"));
var react_router_dom_1 = require("react-router-dom");
/**
 * Menu item meant to be used inside a <TreeNodeActionsMenu>. It provides a custom create button
 * which will initialize the create form with values to insert a new node before the current one
 *
 * @example
 * const TagNodeActions = props => (
 *     <TreeNodeActions {...props}>
 *         <TreeNodeActionsMenu {...props}>
 *             <AddNodeBeforeMenuItem />
 *             <AddNodeAfterMenuItem />
 *         </TreeNodeActionsMenu>
 *     </TreeNodeActions>
 * );
 * export const TagsList = (props) => (
 *     <Tree {...props}>
 *         <TreeList>
 *             <TreeNode actions={<TagNodeActions />}>
 *                 <TextField source="name" />
 *             </TreeNode>
 *         </TreeList>
 *     </Tree>
 * );
 */
var AddNodeBeforeMenuItemView = function (_a) {
    var basePath = _a.basePath, _b = _a.label, label = _b === void 0 ? 'ra.tree.add_node_before' : _b, parentSource = _a.parentSource, positionSource = _a.positionSource, siblingRecord = _a.record, translate = _a.translate, props = __rest(_a, ["basePath", "label", "parentSource", "positionSource", "record", "translate"]);
    var _c;
    // This record will be used to initialize the form values for the new node
    var record = (_c = {},
        // The new node will have the same parent as the node after which it will be inserted
        _c[parentSource] = siblingRecord[parentSource],
        // The new node will be inserted before its sibling so it has to take its position
        _c[positionSource] = siblingRecord[positionSource],
        _c);
    return (react_1.default.createElement(MenuItem_1.default
    // @ts-ignore
    , __assign({ 
        // @ts-ignore
        component: react_router_dom_1.Link, to: {
            pathname: basePath + "/create",
            state: { record: record },
        }, label: label }, props), translate(label)));
};
var AddNodeBeforeMenuItem = ra_core_1.withTranslate(
// @ts-ignore
AddNodeBeforeMenuItemView);
exports.default = AddNodeBeforeMenuItem;
