"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var prop_types_1 = __importDefault(require("prop-types"));
var onlyUpdateForKeys_1 = __importDefault(require("recompose/onlyUpdateForKeys"));
var ra_core_1 = require("ra-core");
var react_admin_1 = require("react-admin");
var TreeListActions = function (_a) {
    var basePath = _a.basePath, className = _a.className, closeNode = _a.closeNode, currentSort = _a.currentSort, expandNode = _a.expandNode, exporter = _a.exporter, hasCreate = _a.hasCreate, hasEdit = _a.hasEdit, hasList = _a.hasList, hasShow = _a.hasShow, loading = _a.loading, parentSource = _a.parentSource, permanentFilter = _a.permanentFilter, positionSource = _a.positionSource, resource = _a.resource, toggleNode = _a.toggleNode, total = _a.total, rest = __rest(_a, ["basePath", "className", "closeNode", "currentSort", "expandNode", "exporter", "hasCreate", "hasEdit", "hasList", "hasShow", "loading", "parentSource", "permanentFilter", "positionSource", "resource", "toggleNode", "total"]);
    return (react_1.default.createElement(react_admin_1.CardActions, __assign({ className: className }, ra_core_1.sanitizeListRestProps(rest)),
        hasCreate && react_1.default.createElement(react_admin_1.CreateButton, { basePath: basePath }),
        exporter !== false && (react_1.default.createElement(react_admin_1.ExportButton, { disabled: total === 0, resource: resource, sort: currentSort, filter: permanentFilter, exporter: exporter }))));
};
TreeListActions.propTypes = {
    basePath: prop_types_1.default.string,
    className: prop_types_1.default.string,
    exporter: prop_types_1.default.oneOfType([prop_types_1.default.func, prop_types_1.default.bool]),
    hasCreate: prop_types_1.default.bool,
    resource: prop_types_1.default.string,
};
exports.default = onlyUpdateForKeys_1.default(['resource'])(TreeListActions);
