"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var IconButton_1 = __importDefault(require("@material-ui/core/IconButton"));
var Menu_1 = __importDefault(require("@material-ui/core/Menu"));
var MoreVert_1 = __importDefault(require("@material-ui/icons/MoreVert"));
var TreeNodeActionsMenu = /** @class */ (function (_super) {
    __extends(TreeNodeActionsMenu, _super);
    function TreeNodeActionsMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { anchorEl: null };
        _this.handleClick = function (event) {
            _this.setState({ anchorEl: event.currentTarget });
        };
        _this.handleClose = function () {
            _this.setState({ anchorEl: null });
        };
        return _this;
    }
    TreeNodeActionsMenu.prototype.render = function () {
        var _a = this.props, basePath = _a.basePath, children = _a.children, parentSource = _a.parentSource, positionSource = _a.positionSource, record = _a.record, resource = _a.resource, props = __rest(_a, ["basePath", "children", "parentSource", "positionSource", "record", "resource"]);
        var anchorEl = this.state.anchorEl;
        var open = Boolean(anchorEl);
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(IconButton_1.default, __assign({ "aria-label": "More", "aria-owns": open ? 'long-menu' : null, "aria-haspopup": "true", onClick: this.handleClick }, props),
                react_1.default.createElement(MoreVert_1.default, null)),
            react_1.default.createElement(Menu_1.default, { id: "long-menu", anchorEl: anchorEl, open: open, onClose: this.handleClose, marginThreshold: 32 }, react_1.Children.map(children, function (child) {
                return react_1.isValidElement(child)
                    ? react_1.cloneElement(child, __assign({ basePath: basePath,
                        parentSource: parentSource,
                        positionSource: positionSource,
                        record: record,
                        resource: resource }, child.props))
                    : null;
            }))));
    };
    return TreeNodeActionsMenu;
}(react_1.Component));
exports.default = TreeNodeActionsMenu;
