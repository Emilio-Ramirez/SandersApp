"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var List_1 = __importDefault(require("@material-ui/core/List"));
var styles_1 = require("@material-ui/core/styles");
var TreeNode_1 = __importDefault(require("./TreeNode"));
var times = function (nbChildren, fn) {
    return Array.from({ length: nbChildren }, function (_, key) { return fn(key); });
};
var DummyRecord = {};
var TreeListLoading = function (_a) {
    var _b = _a.nbFakeLines, nbFakeLines = _b === void 0 ? 5 : _b, props = __rest(_a, ["nbFakeLines"]);
    return (react_1.default.createElement(List_1.default, __assign({ dense: true, disablePadding: true }, sanitizeRestProps(props)), times(nbFakeLines, function (key) { return (
    // @ts-ignore
    react_1.default.createElement(TreeNode_1.default, __assign({ key: key, record: DummyRecord }, props),
        react_1.default.createElement(Placeholder, null))); })));
};
exports.default = TreeListLoading;
var sanitizeRestProps = function (_a) {
    var basePath = _a.basePath, children = _a.children, classes = _a.classes, closeNode = _a.closeNode, data = _a.data, expandNode = _a.expandNode, hasCreate = _a.hasCreate, hasEdit = _a.hasEdit, hasList = _a.hasList, hasShow = _a.hasShow, history = _a.history, loading = _a.loading, locale = _a.locale, location = _a.location, match = _a.match, nodes = _a.nodes, options = _a.options, parentSource = _a.parentSource, permissions = _a.permissions, positionSource = _a.positionSource, resource = _a.resource, toggleNode = _a.toggleNode, version = _a.version, rest = __rest(_a, ["basePath", "children", "classes", "closeNode", "data", "expandNode", "hasCreate", "hasEdit", "hasList", "hasShow", "history", "loading", "locale", "location", "match", "nodes", "options", "parentSource", "permissions", "positionSource", "resource", "toggleNode", "version"]);
    return rest;
};
var RawPlaceholder = function (_a) {
    var classes = _a.classes;
    return (react_1.default.createElement("div", { className: classes.root }, "\u00A0"));
};
var styles = function (theme) {
    return styles_1.createStyles({
        root: {
            backgroundColor: theme.palette.grey[300],
            width: 256,
        },
    });
};
var Placeholder = styles_1.withStyles(styles)(RawPlaceholder);
