"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var ListItemIcon_1 = __importDefault(require("@material-ui/core/ListItemIcon"));
var IconButton_1 = __importDefault(require("@material-ui/core/IconButton"));
var KeyboardArrowRight_1 = __importDefault(require("@material-ui/icons/KeyboardArrowRight"));
var KeyboardArrowDown_1 = __importDefault(require("@material-ui/icons/KeyboardArrowDown"));
var CircularProgress_1 = __importDefault(require("@material-ui/core/CircularProgress"));
var styles_1 = require("@material-ui/core/styles");
var compose_1 = __importDefault(require("recompose/compose"));
var ra_core_1 = require("ra-core");
var TreeNodeIconView = function (_a) {
    var classes = _a.classes, expanded = _a.expanded, hasChildren = _a.hasChildren, loading = _a.loading, onClick = _a.onClick, translate = _a.translate;
    return (react_1.default.createElement(ListItemIcon_1.default, null, loading ? (react_1.default.createElement("div", { className: classes.icon },
        react_1.default.createElement(CircularProgress_1.default, { size: "1em" }))) : hasChildren ? (react_1.default.createElement(IconButton_1.default, { className: classes.button, "aria-label": translate(expanded ? 'ra.tree.close' : 'ra.tree.expand'), title: translate(expanded ? 'ra.tree.close' : 'ra.tree.expand'), onClick: onClick }, expanded ? react_1.default.createElement(KeyboardArrowDown_1.default, null) : react_1.default.createElement(KeyboardArrowRight_1.default, null))) : (react_1.default.createElement(KeyboardArrowRight_1.default, { className: classes.invisible }))));
};
var styles = function (theme) { return ({
    button: {
        height: theme.spacing.unit * 3,
        width: theme.spacing.unit * 3,
    },
    icon: {
        alignItems: 'center',
        display: 'inline-flex',
        flex: '0 0 auto',
        fontSize: '1.5rem',
        height: theme.spacing.unit * 3,
        justifyContent: 'baseline',
        position: 'relative',
        verticalAlign: 'middle',
        width: theme.spacing.unit * 3,
    },
    invisible: {
        opacity: 0,
    },
}); };
var TreeNodeIcon = compose_1.default(styles_1.withStyles(styles), ra_core_1.withTranslate)(TreeNodeIconView);
exports.default = TreeNodeIcon;
